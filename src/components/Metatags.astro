---
import {
	SITE_HOST,
	SITE_URL,
	SITE_TITLE,
	SITE_DESCRIPTION,
} from '../constants';

export type Props = {
	title?: string;
	url?: string;
	description?: string;
};

const { title = '', url = '/', description = SITE_DESCRIPTION } = Astro.props;

const isBlogPost = url.startsWith('/blog/') || url.startsWith('/til/');
const canonicalUrl = `${SITE_URL}${url}`;

const imagePath = url.replace(/\/$/, '.png');
const imageUrl = `${SITE_URL}/cards/src/content${imagePath}`;
---

<meta charset="utf-8" />
<meta
	name="viewport"
	content="width=device-width, initial-scale=1, shrink-to-fit=no"
/>
<meta name="description" content={description} />
<meta property="og:type" content={isBlogPost ? 'article' : 'website'} />
<meta property="og:title" content={title} />
<meta property="og:url" content={canonicalUrl} />
<meta property="og:site_name" content={SITE_TITLE} />
<meta property="og:description" content={description} />
<meta name="twitter:creator" content="@iamsapegin" />
<link
	rel="canonical"
	href={canonicalUrl}
	data-baseprotocol="https:"
	data-basehost={SITE_HOST}
/>
<link
	rel="alternate"
	type="application/rss+xml"
	title="RSS Feed"
	href={`${SITE_URL}/atom.xml`}
/>
<link rel="sitemap" href={`${SITE_URL}/sitemap-index.xml`} />
<link href="/fonts/Mondwest-Regular.woff2" as="font" type="font/woff2" />
{
	isBlogPost && (
		<>
			<meta property="og:image" content={imageUrl} />
			<meta name="twitter:card" content="summary_large_image" />
			<meta name="twitter:image" content={imageUrl} />
		</>
	)
}
