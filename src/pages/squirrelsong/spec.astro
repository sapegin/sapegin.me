---
import fs from 'node:fs';
import path from 'node:path';
import Layout from '../../layouts/Layout.astro';
import {
	SquirrelsongSpecPage,
	type ColorRow,
} from '../../templates/SquirrelsongSpecPage';
import { getContrastingTextColor } from '../../util/getContrastingTextColor';
import { hexToRgb } from '../../util/hexToRgb';

const PALETTE_DIR = 'squirrelsong-master';

// Load palette files
const lightPalette: Record<string, string> = JSON.parse(
	fs.readFileSync(path.join(PALETTE_DIR, 'light/palette.json')).toString()
);
const darkPaletteRaw: Record<string, string> = JSON.parse(
	fs.readFileSync(path.join(PALETTE_DIR, 'dark/palette.json')).toString()
);

const hexToRgbString = (hex: string) => `RGB(${hexToRgb(hex).join(', ')})`;

const getDarkName = (lightName: string) => {
	return lightName
		.replace(/^brightPinkLight$/, 'brightPinkDark')
		.replace(/^brightPinkLighter$/, 'brightPinkDarker')
		.replace(/^brightYellowLight$/, 'brightYellowDark');
};
const getDarkPurpleName = (darkName: string) => {
	return darkName
		.replace('gray', 'purple')
		.replace(/^brightYellow$/, 'brightYellowPurple')
		.replace(/^brightYellowDark$/, 'brightYellowDarkPurple');
};

const colorRows: ColorRow[] = Object.entries(lightPalette).map(
	([lightName, lightHex]) => {
		const darkName = getDarkName(lightName);
		const darkHex = darkPaletteRaw[darkName];
		const darkPurpleName = getDarkPurpleName(darkName);
		const darkPurpleHex = darkPaletteRaw[darkPurpleName];

		return {
			light: {
				name: lightName,
				hex: lightHex,
				rgb: hexToRgbString(lightHex),
				textColor: getContrastingTextColor(lightHex),
			},
			dark: darkHex
				? {
						name: darkName,
						hex: darkHex,
						rgb: hexToRgbString(darkHex),
						textColor: getContrastingTextColor(darkHex),
					}
				: undefined,
			darkPurple: darkPurpleHex
				? {
						name: darkPurpleName,
						hex: darkPurpleHex,
						rgb: hexToRgbString(darkPurpleHex),
						textColor: getContrastingTextColor(darkPurpleHex),
					}
				: undefined,
		};
	}
);
---

<Layout
	url="/squirrelsong/spec/"
	title="Squirrelsong color theme specification"
	description="Complete color specification for Squirrelsong light and dark themes"
	component={SquirrelsongSpecPage}
	props={{ colorRows }}
/>
